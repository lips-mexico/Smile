@charset "UTF-8";
/* # Module: display-on() - mixin */
/* ------------------------------ */
/* Test: Displays media query when until is null. */
/*   ASSERT: Display on size hand.   */
/*   OUTPUT   */
@media (min-width: 320px) and (max-width: 599px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 320px) and (max-width: 599px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size page.   */
/*   OUTPUT   */
@media (min-width: 600px) and (max-width: 899px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 600px) and (max-width: 899px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size book.   */
/*   OUTPUT   */
@media (min-width: 900px) and (max-width: 1199px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 900px) and (max-width: 1199px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size desk.   */
/*   OUTPUT   */
@media (min-width: 1200px) and (max-width: 1799px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 1200px) and (max-width: 1799px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size wide.   */
/*   OUTPUT   */
@media (min-width: 1800px) and (max-width: 3000px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 1800px) and (max-width: 3000px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/* Test: Displays media query when until is not null. */
/*   ASSERT: Display on size hand until desk.   */
/*   OUTPUT   */
@media (min-width: 320px) and (max-width: 1799px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 320px) and (max-width: 1799px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size hand until page.   */
/*   OUTPUT   */
@media (min-width: 320px) and (max-width: 899px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 320px) and (max-width: 899px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size page until wide.   */
/*   OUTPUT   */
@media (min-width: 600px) and (max-width: 3000px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 600px) and (max-width: 3000px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size page until book.   */
/*   OUTPUT   */
@media (min-width: 600px) and (max-width: 1199px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 600px) and (max-width: 1199px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size book unitl wide.   */
/*   OUTPUT   */
@media (min-width: 900px) and (max-width: 3000px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 900px) and (max-width: 3000px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size book unitl desk.   */
/*   OUTPUT   */
@media (min-width: 900px) and (max-width: 1799px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 900px) and (max-width: 1799px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size desk unitl wide.   */
/*   OUTPUT   */
@media (min-width: 1200px) and (max-width: 3000px) {
  .test-output {
    font-size: 1em; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
@media (min-width: 1200px) and (max-width: 3000px) {
  .test-output {
    font-size: 1em; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/* Test: Marks an error when until and size are the same. */
/*   ASSERT: Display on size hand until hand.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(hand)’"; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(hand)’"; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size page until page.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(page)’"; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(page)’"; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size book until book.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(book)’"; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(book)’"; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size desk until desk.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(desk)’"; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(desk)’"; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size wide until wide.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(wide)’"; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: This media query has redundant information. ‘display-on(wide)’"; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/* Test: Marks an error when includes all devices. */
/*   ASSERT: Display on size hand until wide.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: This media query is redundant, it includes all devices."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: This media query is redundant, it includes all devices."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/* Test: Marks an error when size value is larger than until value. */
/*   ASSERT: Display on size page until hand.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(hand, $until: page)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(hand, $until: page)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size wide until hand.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(hand, $until: wide)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(hand, $until: wide)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size book until page.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(page, $until: book)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(page, $until: book)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size wide until page.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(page, $until: wide)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(page, $until: wide)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size desk until book.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(book, $until: desk)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(book, $until: desk)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size wide until book.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(book, $until: wide)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(book, $until: wide)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: Display on size wide until desk.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(desk, $until: wide)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Did you mean ‘display-on(desk, $until: wide)’? This media query contains wrong syntax, the value of the ‘until’ parameter should be larger than the value of the ‘size’ parameter."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/*  */
/* # Module: grid() - mixin */
/* ------------------------ */
/* Test: Displayes a grid given standard parameters. */
/*   ASSERT: 4 Col with 0x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  padding-left: 0;
  padding-right: 0;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  padding-left: 0;
  padding-right: 0;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 4 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  padding-left: 24px;
  padding-right: 24px;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  padding-left: 24px;
  padding-right: 24px;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 4 Col with 16x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  padding-left: 384px;
  padding-right: 384px;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  padding-left: 384px;
  padding-right: 384px;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 8 Col with 0x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 0;
  padding-right: 0;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 0;
  padding-right: 0;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 8 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 24px;
  padding-right: 24px;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 24px;
  padding-right: 24px;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 8 Col with 16x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 384px;
  padding-right: 384px;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 384px;
  padding-right: 384px;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 12 Col with 0x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 0;
  padding-right: 0;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 0;
  padding-right: 0;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 12 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 24px;
  padding-right: 24px;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 24px;
  padding-right: 24px;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 12 Col with 16x offset.   */
/*   OUTPUT   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 384px;
  padding-right: 384px;
  width: 100%; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  display: grid;
  grid-gap: 24px;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  padding-left: 384px;
  padding-right: 384px;
  width: 100%; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/* Test: Prints an error when the amount of columns is not 4, 8 or 12. */
/*   ASSERT: 3 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 5 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 7 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 9 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 11 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*   ASSERT: 13 Col with 1x offset.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: Amount of columns must be 4, 8 or 12. For more information on this, see grid standard."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/* Test: Prints an error when the amount of columns is not between 0 and 16, inclusive. */
/*   ASSERT: 4 Col with 17 offset.   */
/*   OUTPUT   */
.test-output {
  content: "Value Error: The offset multiplier must be between 0 and 16, inclusive."; }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  content: "Value Error: The offset multiplier must be between 0 and 16, inclusive."; }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/*  */
